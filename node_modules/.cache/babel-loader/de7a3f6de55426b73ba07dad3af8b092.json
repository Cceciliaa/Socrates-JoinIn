{"ast":null,"code":"import _classCallCheck from \"/Users/zhang/Documents/votetolearnapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhang/Documents/votetolearnapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zhang/Documents/votetolearnapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zhang/Documents/votetolearnapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zhang/Documents/votetolearnapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zhang/Documents/votetolearnapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zhang/Documents/votetolearnapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Button } from 'antd';\nimport { BrowserRouter } from 'react-router-dom';\nimport InputQuestion from './Components/InputQuestion';\nimport AnswerBox from './Components/AnswerBox';\nimport VoteAnswer from './Components/VoteAnswer';\nimport PickStudent from './Components/PickStudents';\nimport Validate from './Components/validate';\nimport './Links.css';\nimport { Route, Link } from 'react-router-dom';\nimport PickStudents from './Components/PickStudents';\nimport './App.css'; // All of our functionality is currently in the App class.\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // Contains our properties:\n\n    _this.addQuestion = function (question) {\n      _this.setState({\n        question: question\n      });\n    };\n\n    _this.getRandomSubarray = function (arr, size) {\n      var shuffled = arr.slice(0),\n          i = arr.length,\n          temp,\n          index;\n\n      while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n      }\n\n      return shuffled.slice(0, size);\n    };\n\n    _this.handleClick = function (e) {\n      // Get for students.\n      var studentList = _this.getRandomSubarray(_this.state.student_name, 4); // Mark these students as our selected students:\n\n\n      _this.setState({\n        chosenStudents: studentList\n      }); // ? Answered questions?\n\n\n      var asw_Arr = []; // Go through the student list\n\n      for (var i = 0, len = studentList.length; i < len; i++) {\n        // Create a an array which shows each student, their answer, the amount of votes they recieved, and their ID:\n        asw_Arr = asw_Arr.concat({\n          student: studentList[i],\n          answer: '',\n          vote: 0,\n          studentID: i\n        });\n      } // This is the array which contains the array with all of the answers..\n\n\n      _this.setState({\n        answersArray: asw_Arr,\n        status: 'answer'\n      });\n    };\n\n    _this.addAnswer = function (answer) {\n      // Get the current state\n      var student = _this.state.chosenStudents[_this.state.currentID]; // \n\n      var newAnswersArray = _this.state.answersArray.filter(function (info) {\n        return info.student !== student;\n      }); // Put in the new items.\n\n\n      newAnswersArray.splice(_this.state.currentID, 0, {\n        student: student,\n        answer: answer,\n        vote: 0,\n        studentID: _this.state.currentID\n      }); // Go to the next answer.\n\n      _this.setState({\n        answersArray: newAnswersArray,\n        studentID: _this.state.currentID += 1\n      });\n\n      _this.handleAnswer();\n    };\n\n    _this.handleVote = function (studentID) {\n      _this.setState({\n        currentID: studentID\n      });\n\n      var noVote = _this.state.answersArray.filter(function (std) {\n        return std.studentID !== studentID;\n      });\n\n      noVote.splice(studentID, 0, {\n        student: _this.state.answersArray[studentID].student,\n        answer: _this.state.answersArray[studentID].answer,\n        vote: _this.state.answersArray[studentID].vote += 1,\n        studentID: studentID\n      });\n      console.log(noVote);\n      return noVote;\n    };\n\n    _this.setVote = function (studentID) {\n      var noVote = _this.handleVote(studentID);\n\n      _this.setState({\n        answersArray: noVote\n      });\n    };\n\n    _this.goToValidate = function () {\n      _this.setState({\n        status: 'validate'\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState({\n        question: '',\n        chosenStudents: [],\n        answersArray: [],\n        currentID: 0,\n        status: 'question'\n      });\n    };\n\n    _this.handlePage = function () {\n      if (_this.state.status === 'question') {\n        _this.changeBackground('#f5a97e');\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"alert alert-info\",\n          role: \"alert\",\n          class: \"InputQuestion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(InputQuestion, {\n          addQuestion: _this.addQuestion,\n          chooseStudent: _this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        })));\n      } else if (_this.state.status === 'pick') {\n        _this.changeBackground('#f5a97e');\n\n        return React.createElement(\"div\", {\n          className: \"alert alert-info\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(PickStudent, {\n          chooseStudent: _this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }));\n      } else if (_this.state.status === 'answer') {\n        _this.changeBackground('cornflowerblue');\n\n        return React.createElement(\"div\", {\n          className: \"answer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Question: \", _this.state.question)), React.createElement(\"div\", {\n          className: \"alert alert-info\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(AnswerBox, {\n          question: _this.state.question,\n          addAnswer: _this.addAnswer,\n          chosenStudents: _this.state.chosenStudents,\n          student: _this.state.chosenStudents[_this.state.currentID],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        })));\n      } else if (_this.state.status === 'vote') {\n        _this.changeBackground('cornflowerblue');\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Question: \", _this.state.question)), React.createElement(\"div\", {\n          className: \"alert alert-info\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(VoteAnswer, {\n          question: _this.state.question,\n          answersArray: _this.state.answersArray,\n          handleVote: _this.setVote,\n          goToValidate: _this.goToValidate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        })));\n      } else if (_this.state.status === 'validate') {\n        _this.changeBackground('#f5a97e');\n\n        return React.createElement(\"div\", {\n          className: \"validate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"Question: \", _this.state.question)), React.createElement(\"div\", {\n          className: \"alert alert-info\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(Validate, {\n          question: _this.state.question,\n          answersArray: _this.state.answersArray,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          onClick: _this.reset,\n          className: \"select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \"Reset\")));\n      }\n    };\n\n    _this.state = {\n      // The question currently being asked:\n      question: '',\n      // The students that could be selected:\n      student_name: ['Oliver', 'Jake', 'Noah', 'James', 'Jack', 'Connor', 'Liam', 'John', 'Harry', 'Callum', 'Mason', 'Robert', 'Jacob', 'Michael', 'Charlie', 'Kyle', 'William', 'Thomas', 'Joe', 'Ethan', 'David', 'George', 'Reece', 'Richard'],\n      // The students that are chosen from all possible students (4)\n      chosenStudents: [],\n      // The answers that each student gives.\n      answersArray: [],\n      // Which student are we on:\n      currentID: 0,\n      // At what point in this process are we?\n      status: 'question' // BRETT --> Not sure what this does?\n\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAnswer = _this.handleAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Updates the current question and move the status to the next section:\n\n\n  _createClass(App, [{\n    key: \"handleAnswer\",\n    // Brings us into the vote stage.\n    value: function handleAnswer() {\n      // \n      if (this.state.currentID >= 4) {\n        // IF all four students have voted,\n        this.setState({\n          status: 'vote'\n        });\n      }\n    } // \n\n  }, {\n    key: \"changeBackground\",\n    value: function changeBackground(color) {\n      document.body.style.background = color;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Links\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/InputQuestion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Input Question\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/PickStudent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Pick Students\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/EnterAnswer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Enter Your Answer\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Vote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Vote on an Answer\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Validate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Validate Answers\")))))), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(this.handlePage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Dummy\",\n        exact: true,\n        component: PickStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Dummy\",\n        exact: true,\n        component: VoteAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Dummy\",\n        exact: true,\n        component: Validate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zhang/Documents/votetolearnapp/src/App.js"],"names":["React","Component","Button","BrowserRouter","InputQuestion","AnswerBox","VoteAnswer","PickStudent","Validate","Route","Link","PickStudents","App","addQuestion","question","setState","getRandomSubarray","arr","size","shuffled","slice","i","length","temp","index","Math","floor","random","handleClick","e","studentList","state","student_name","chosenStudents","asw_Arr","len","concat","student","answer","vote","studentID","answersArray","status","addAnswer","currentID","newAnswersArray","filter","info","splice","handleAnswer","handleVote","noVote","std","console","log","setVote","goToValidate","reset","handlePage","changeBackground","bind","color","document","body","style","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Button } from 'antd';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport InputQuestion from './Components/InputQuestion';\nimport AnswerBox from './Components/AnswerBox';\nimport VoteAnswer from './Components/VoteAnswer';\nimport PickStudent from './Components/PickStudents';\nimport Validate from './Components/validate';\nimport './Links.css';\nimport { Route, Link } from 'react-router-dom';\nimport PickStudents from './Components/PickStudents';\n\nimport './App.css';\n\n\n// All of our functionality is currently in the App class.\nclass App extends Component {\n   \n  constructor() {\n    super();\n    // Contains our properties:\n    this.state = {\n      // The question currently being asked:\n      question: '',\n      // The students that could be selected:\n      student_name: ['Oliver', 'Jake', 'Noah', 'James', 'Jack', 'Connor', 'Liam', 'John', 'Harry', 'Callum',\n        'Mason', 'Robert', 'Jacob', 'Michael', 'Charlie', 'Kyle', 'William', 'Thomas', 'Joe', 'Ethan', 'David',\n        'George', 'Reece', 'Richard'],\n      // The students that are chosen from all possible students (4)\n      chosenStudents: [],\n      // The answers that each student gives.\n      answersArray: [],\n      // Which student are we on:\n      currentID: 0,\n      // At what point in this process are we?\n      status: 'question'\n    }\n    // BRETT --> Not sure what this does?\n    this.handleClick = this.handleClick.bind(this)\n    this.handleAnswer = this.handleAnswer.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  // Updates the current question and move the status to the next section:\n  addQuestion = (question) => {\n    this.setState({ question: question})\n  }\n\n  // Get a random, small group of students from all the students. \n  getRandomSubarray = (arr, size) => {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n      index = Math.floor((i + 1) * Math.random());\n      temp = shuffled[index];\n      shuffled[index] = shuffled[i];\n      shuffled[i] = temp;\n    }\n    return shuffled.slice(0, size);\n  }\n\n  // What to do with clicks --> Don't understand this entirely.\n  handleClick = (e) => {\n    // Get for students.\n    let studentList = this.getRandomSubarray(this.state.student_name, 4);\n    // Mark these students as our selected students:\n    this.setState({ chosenStudents: studentList });\n    // ? Answered questions?\n    let asw_Arr = [];\n    // Go through the student list\n    for (let i = 0, len = studentList.length; i < len; i++) {\n      // Create a an array which shows each student, their answer, the amount of votes they recieved, and their ID:\n      asw_Arr = asw_Arr.concat({ student: studentList[i], answer: '', vote: 0, studentID: i })\n    }\n    // This is the array which contains the array with all of the answers..\n    this.setState({ answersArray: asw_Arr, status: 'answer' })\n  }\n\n  // Add an answer to the answer array.\n  addAnswer = (answer) => {\n    // Get the current state\n    let student = this.state.chosenStudents[this.state.currentID];\n    // \n    let newAnswersArray = this.state.answersArray.filter(\n      info => info.student !== student);\n    // Put in the new items.\n    newAnswersArray.splice(this.state.currentID, 0, { student: student, answer: answer, vote: 0, studentID: this.state.currentID })\n    // Go to the next answer.\n    this.setState({ answersArray: newAnswersArray, studentID: this.state.currentID += 1 })\n    this.handleAnswer();\n  }\n\n  // Brings us into the vote stage.\n  handleAnswer() {\n    // \n    if (this.state.currentID >= 4) {\n      // IF all four students have voted,\n      this.setState({ status: 'vote' })\n    }\n  }\n\n  // \n  handleVote = (studentID) => {\n    this.setState({ currentID: studentID });\n    let noVote = this.state.answersArray.filter(std => std.studentID !== studentID);\n    noVote.splice(studentID, 0, {\n      student: this.state.answersArray[studentID].student,\n      answer: this.state.answersArray[studentID].answer,\n      vote: this.state.answersArray[studentID].vote += 1,\n      studentID: studentID\n    })\n    console.log(noVote)\n    return noVote;\n  }\n\n  setVote = (studentID) => {\n    let noVote = this.handleVote(studentID);\n    this.setState({ answersArray: noVote })\n  }\n\n  goToValidate = () => {\n    this.setState({ status: 'validate' })\n  }\n\n  reset = () => {\n    this.setState({ question: '',\n    chosenStudents: [],\n    answersArray: [],\n    currentID: 0,\n    status: 'question'})\n  }\n\n  changeBackground(color) {\n    document.body.style.background = color;\n }\n \n\n  handlePage = () => {\n    if (this.state.status === 'question') {\n      this.changeBackground('#f5a97e')\n      return (\n       <div>\n          <div className=\"alert alert-info\" role=\"alert\" class=\"InputQuestion\">\n            <InputQuestion addQuestion={this.addQuestion} chooseStudent={this.handleClick}/>\n          </div>\n          {/* <div className=\"progress\">\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style=\"width: 10%\" aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n            </div>\n          </div> */}\n        </div>\n      )\n    } else if (this.state.status === 'pick') {\n      this.changeBackground('#f5a97e')\n      return (\n        <div className=\"alert alert-info\" role=\"alert\">\n          <PickStudent chooseStudent={this.handleClick}/>\n        </div>\n      )\n    } else if (this.state.status === 'answer') {\n      this.changeBackground('cornflowerblue')\n      return (\n        <div className=\"answer\">\n          <div>\n            <h3>Question: {this.state.question}</h3>\n          </div>\n          <div className=\"alert alert-info\" role=\"alert\">\n            <AnswerBox question={this.state.question}\n              addAnswer={this.addAnswer}\n              chosenStudents={this.state.chosenStudents}\n              student={this.state.chosenStudents[this.state.currentID]} />\n          </div>\n        </div>\n      )\n    } else if (this.state.status === 'vote') {\n      this.changeBackground('cornflowerblue')\n      return (\n        <div>\n          <div>\n            <h3>Question: {this.state.question}</h3>\n          </div>\n          <div className=\"alert alert-info\" role=\"alert\">\n            <VoteAnswer question={this.state.question} answersArray={this.state.answersArray} handleVote={this.setVote}\n              goToValidate={this.goToValidate} />\n          </div>\n        </div>\n      )\n    } else if (this.state.status === 'validate') {\n      this.changeBackground('#f5a97e')\n      return (\n        <div className=\"validate\">\n          <div>\n            <h3>Question: {this.state.question}</h3>\n          </div>\n          <div className=\"alert alert-info\" role=\"alert\">\n            <Validate question={this.state.question} answersArray={this.state.answersArray} />\n          </div>\n          <div>\n          <Button type=\"primary\" onClick={this.reset} className=\"select\">Reset</Button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className = \"Links\">\n          <header>\n            <nav>\n              <ul>\n                <li><Link to=\"/InputQuestion\">Input Question</Link></li>\n                <li><Link to=\"/PickStudent\">Pick Students</Link></li>\n                <li><Link to=\"/EnterAnswer\">Enter Your Answer</Link></li>\n                <li><Link to=\"/Vote\">Vote on an Answer</Link></li>\n                <li><Link to=\"/Validate\">Validate Answers</Link></li>\n                {/* <li><Link to=\"/Vote\">Vote</Link></li>\n                <li><Link to=\"/Validate\">Validate</Link></li> */}\n                {/* From a sample I was using: */}\n                {/* <li><Link to={{\n                  pathname: '/new-post',\n                  hash: '#submit',\n                  search: '?quick-submit=true'\n                }}>New Post</Link></li> */}\n                \n              </ul>\n            </nav>\n          </header>\n          \n        </div>\n        {/* We can use browser routing in any element. */}\n        \n          <div className=\"App\">\n            <header className=\"App-header\">\n              <this.handlePage />\n\n              {/* <Route path=\"/InputQuestion\" exact component={InputQuestion}  /> */}\n              <Route path=\"/Dummy\" exact component={PickStudents} />\n              <Route path=\"/Dummy\" exact component={VoteAnswer} />\n              <Route path=\"/Dummy\" exact component={Validate} />\n              {/* <Route\n                path= \"/InputQuestion\"\n                render={(props) =><Component {...props} addQuestion={this.addQuestion} />}\n              >\n              </Route> */}\n\n            </header>\n          </div>\n          \n        \n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}